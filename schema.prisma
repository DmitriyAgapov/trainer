// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model Role {
  id               String  @id @default(cuid())
  name             String  @default("")
  canManageContent Boolean @default(false)
  canManageUsers   Boolean @default(false)
  users            User[]  @relation("User_role")
}

model User {
  id            String  @id @default(cuid())
  name          String  @default("")
  email         String  @unique @default("")
  password      String
  role          Role?   @relation("User_role", fields: [roleId], references: [id])
  roleId        String? @map("role")
  address       String  @default("")
  phone         String  @default("")
  instagram     String  @default("")
  facebook      String  @default("")
  linkedin      String  @default("")
  emailContacts String  @default("")

  @@index([roleId])
}

model Callback {
  id            String    @id @default(cuid())
  name          String    @default("")
  email         String    @default("")
  phone         String    @default("")
  publishedDate DateTime? @default(now())
  message       String    @default("")
}

model Section {
  id                   String  @id @default(cuid())
  type                 String?
  order                Int?
  subtitle             String  @default("")
  title                String  @default("")
  url                  String  @unique @default("")
  status               String? @default("draft")
  image_filesize       Int?
  image_extension      String?
  image_width          Int?
  image_height         Int?
  image_mode           String?
  image_id             String?
  background_filesize  Int?
  background_extension String?
  background_width     Int?
  background_height    Int?
  background_mode      String?
  background_id        String?
  video_filesize       Int?
  video_mode           String?
  video_filename       String?
  content              Json    @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  linkText             String  @default("")
  link                 String  @default("")
  linkType             String? @default("button")
}

model CourseStructure {
  id                String  @id @default(cuid())
  order             Int?
  title             String  @default("")
  image_filesize    Int?
  image_extension   String?
  image_width       Int?
  image_height      Int?
  image_mode        String?
  image_id          String?
  imageSvg_filesize Int?
  imageSvg_mode     String?
  imageSvg_filename String?
  content           Json    @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
}

model CourseFeature {
  id                String  @id @default(cuid())
  order             Int?
  title             String  @default("")
  image_filesize    Int?
  image_extension   String?
  image_width       Int?
  image_height      Int?
  image_mode        String?
  image_id          String?
  imageSvg_filesize Int?
  imageSvg_mode     String?
  imageSvg_filename String?
  content           Json    @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
}

model CourseBenefit {
  id                String  @id @default(cuid())
  order             Int?
  title             String  @default("")
  image_filesize    Int?
  image_extension   String?
  image_width       Int?
  image_height      Int?
  image_mode        String?
  image_id          String?
  imageSvg_filesize Int?
  imageSvg_mode     String?
  imageSvg_filename String?
  content           Json    @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
}

model Faq {
  id      String @id @default(cuid())
  order   Int?   @default(0)
  title   String @default("")
  content Json   @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
}

model Story {
  id              String    @id @default(cuid())
  order           Int?
  title           String    @default("")
  slug            String    @unique @default("")
  status          String?   @default("draft")
  publishedDate   DateTime?
  image_filesize  Int?
  image_extension String?
  image_width     Int?
  image_height    Int?
  image_mode      String?
  image_id        String?
  content         Json      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
}

model Price {
  id          String @id @default(cuid())
  order       Int?
  title       String @default("")
  content     Json   @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  fullContent Json   @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  price       Int?
  links       Link[] @relation("Price_links")
}

model Post {
  id              String    @id @default(cuid())
  order           Int?
  title           String    @default("")
  slug            String    @unique @default("")
  status          String?   @default("draft")
  date            DateTime?
  image_filesize  Int?
  image_extension String?
  image_width     Int?
  image_height    Int?
  image_mode      String?
  image_id        String?
  content         Json      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  tag             Tag[]     @relation("Post_tag")
  author          Person?   @relation("Post_author", fields: [authorId], references: [id])
  authorId        String?   @map("author")

  @@index([authorId])
}

model Task {
  id           String            @id @default(cuid())
  label        String            @default("")
  priority     TaskPriorityType?
  isComplete   Boolean           @default(false)
  assignedTo   Person?           @relation("Task_assignedTo", fields: [assignedToId], references: [id])
  assignedToId String?           @map("assignedTo")
  finishBy     DateTime?

  @@index([assignedToId])
}

model Person {
  id               String @id @default(cuid())
  name             String @default("")
  email            String @unique @default("")
  password         String
  address          String @default("")
  phone            String @default("")
  instagram        String @default("")
  facebook         String @default("")
  linkedin         String @default("")
  emailContacts    String @default("")
  tasks            Task[] @relation("Task_assignedTo")
  from_Post_author Post[] @relation("Post_author")
}

model Tag {
  id            String @id @default(cuid())
  title         String @default("")
  from_Post_tag Post[] @relation("Post_tag")
}

model Gallery {
  id              String  @id @default(cuid())
  title           String  @default("")
  image_filesize  Int?
  image_extension String?
  image_width     Int?
  image_height    Int?
  image_mode      String?
  image_id        String?
}

model Link {
  id               String  @id @default(cuid())
  linkText         String  @default("")
  link             String  @default("")
  linkType         String? @default("button")
  from_Price_links Price[] @relation("Price_links")
}

enum TaskPriorityType {
  low
  medium
  high
}